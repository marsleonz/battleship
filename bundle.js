(()=>{var t={246:t=>{t.exports={createPlayer:function(t){return{attack:function(r){t.receiveAttack(r)}}},createComputer:function(t){var r=[];return{attack:function(n){if(n){if(r.some((function(t){return t[0]===n[0]&&t[1]===n[1]})))return}else n=function(){var t,n;do{t=Math.floor(10*Math.random()),n=Math.floor(10*Math.random())}while(r.some((function(r){return r[0]===t&&r[1]===n})));return[t,n]}(),r.push(n);return t.receiveAttack(n),n}}}}}},r={};function n(e){var o=r[e];if(void 0!==o)return o.exports;var i=r[e]={exports:{}};return t[e](i,i.exports,n),i.exports}(()=>{"use strict";function t(t,n){return function(t){if(Array.isArray(t))return t}(t)||function(t,r){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var e,o,i,a,c=[],l=!0,u=!1;try{if(i=(n=n.call(t)).next,0===r){if(Object(n)!==n)return;l=!1}else for(;!(l=(e=i.call(n)).done)&&(c.push(e.value),c.length!==r);l=!0);}catch(t){u=!0,o=t}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw o}}return c}}(t,n)||function(t,n){if(t){if("string"==typeof t)return r(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?r(t,n):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,r){(null==r||r>t.length)&&(r=t.length);for(var n=0,e=new Array(r);n<r;n++)e[n]=t[n];return e}const e=function(r){var n=Array.from({length:10},(function(){return Array(10).fill(null)})),e=[],o=[],i=[],a=function(r,e,i){var a=t(e,2),c=a[0],l=a[1],u=r.length;if(!(c<0||c>=10||l<0||l>=10||"horizontal"===i&&l+u>10||"vertical"===i&&c+u>10)){if("horizontal"===i){for(var s=0;s<u;s++)if(null!==n[c][l+s])return;for(var f=0;f<u;f++)n[c][l+f]=r}else{for(var h=0;h<u;h++)if(null!==n[c+h][l])return;for(var d=0;d<u;d++)n[c+d][l]=r}o.push(r)}};return r.forEach((function(t){var r=t.ship,n=t.coords,e=t.orientation;a(r,n,e)})),{board:n,placeShip:a,missedAttacks:e,receiveAttack:function(r){var o=t(r,2),a=o[0],c=o[1],l=n[a][c];l?(l.hit(),i.push(r)):e.push(r)},allSunk:function(){return o.every((function(t){return t.isSunk()}))},attackedCells:i}};var o=n(246);const i=function(t){return{length:t,hits:0,hit:function(){this.hits++},isSunk:function(){return this.hits>=this.length}}};function a(t,r){return function(t){if(Array.isArray(t))return t}(t)||function(t,r){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var e,o,i,a,c=[],l=!0,u=!1;try{if(i=(n=n.call(t)).next,0===r){if(Object(n)!==n)return;l=!1}else for(;!(l=(e=i.call(n)).done)&&(c.push(e.value),c.length!==r);l=!0);}catch(t){u=!0,o=t}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw o}}return c}}(t,r)||function(t,r){if(t){if("string"==typeof t)return c(t,r);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(t,r):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,r){(null==r||r>t.length)&&(r=t.length);for(var n=0,e=new Array(r);n<r;n++)e[n]=t[n];return e}var l=[{ship:i(5),coords:[0,0],orientation:"horizontal"},{ship:i(4),coords:[2,3],orientation:"vertical"},{ship:i(3),coords:[7,4],orientation:"horizontal"},{ship:i(3),coords:[4,1],orientation:"vertical"},{ship:i(2),coords:[6,6],orientation:"horizontal"}],u=[{ship:i(5),coords:[0,0],orientation:"horizontal"},{ship:i(4),coords:[2,3],orientation:"vertical"},{ship:i(3),coords:[6,6],orientation:"horizontal"},{ship:i(3),coords:[8,1],orientation:"horizontal"},{ship:i(2),coords:[7,4],orientation:"horizontal"}],s=e(l),f=e(u),h=(0,o.createPlayer)(f),d=(0,o.createComputer)(s),p=document.getElementById("player-board"),v=document.getElementById("computer-board"),y=function t(r,n){n.innerHTML="",r.board.forEach((function(e,o){e.forEach((function(e,i){var a=document.createElement("div");a.classList.add("cell"),e&&r!==f&&a.classList.add("ship"),a.addEventListener("click",(function(){r===f&&(h.attack([o,i]),t(f,v),f.allSunk()?alert("You win!"):m())})),n.appendChild(a)}))})),r.missedAttacks.forEach((function(t){var r=a(t,2),e=r[0],o=r[1];n.children[10*e+o].classList.add("missed")})),r.attackedCells.forEach((function(t){var r=a(t,2),e=r[0],o=r[1],i=n.children[10*e+o];i.classList.remove("ship"),i.classList.add("ship-hit")}))},m=function(){d.attack(),y(s,p),s.allSunk()&&alert("Computer wins!")};y(s,p),y(f,v)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,